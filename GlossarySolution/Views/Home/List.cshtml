@model IEnumerable<GlossarySolution.Models.DefinitionModel>

@{
    ViewBag.Title = "Terms";
    var part = (string)ViewData["ListPart"];
    var partDesc = (string)ViewData["ListPartDesc"];
}

<div data-part="@part"></div>

<h1 class="sub-title">List of Terms @(part != null ? partDesc : "")</h1>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
<table class="table table-sm">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Term)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TermDefinition)
            </th>
            @*<th></th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Term)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TermDefinition)
                </td>
                <td>
                    <a href="@Url.Action("Details", "Home", new { id = item.DefinitionId })" class="btn btn-light btn-block btn-sm">Details</a>
                </td>
                @*<td>
                        <a href="@Url.Action("Edit", "Home", new { id = item.DefinitionId })" class="btn btn-light btn-block btn-sm">Edit</a>
                    </td>*@
            </tr>
        }
    </tbody>
</table>


@if (Model.Count() == 0)
{
    <div class="alert alert-warning" role="alert">No Terms found, add some!</div>

    <a href="/Home/Create" class="btn btn-default">Create</a>
}